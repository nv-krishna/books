<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Copyright 2012 FuseSource

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->

<!-- 
  This context file provides bean definitions used for demoing this artifact as an application deployed in OSGi.
  The core of the application configuration/setup is done in the other context files.  This file mainly exists
  to provide resources used only in a demo such as defaults for configuration properties that would typically
  be configured externally in a real deployment. 
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
           http://www.springframework.org/schema/osgi-compendium http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd
           http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd">
  
  <!-- Clear/initialize the DB tables used for demo instance. -->
  <jdbc:initialize-database data-source="jdbc.dataSource">
    <jdbc:script location="classpath:sql/setup-hsql.sql"/>
  </jdbc:initialize-database>
  
  <!-- Start the H2 web console so that users can easily inspect the DB after testing the application. -->
  <bean id="h2WebServer" class="org.h2.tools.Server"
    factory-method="createWebServer" init-method="start" destroy-method="stop">
    <constructor-arg value="-web,-webAllowOthers,-webPort,${com.fusesource.example.camel.h2.web.port}" />
  </bean>
  
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="nullValue" value="-=NULL=-"></property>
    <property name="propertiesArray">
      <list>
        <ref bean="defaultProperties"/>
        <!-- Normally pulled from an external file, but internalized for simplicity in
             this example. -->
        <props>
          
          <prop key="com.fusesource.example.camel.jdbc.driver.class">org.h2.Driver</prop>
          <prop key="com.fusesource.example.camel.jdbc.url">jdbc:h2:mem:test</prop>
          <prop key="com.fusesource.example.camel.jdbc.username">sa</prop>
          <prop key="com.fusesource.example.camel.jdbc.password"></prop>
          
          <prop key="com.fusesource.example.camel.jms.brokerUrl">discovery:(fabric:mq-west)</prop>
          <prop key="com.fusesource.example.camel.jms.user">admin</prop>
          <prop key="com.fusesource.example.camel.jms.password">admin</prop>
          
          <prop key="com.fusesource.example.camel.h2.web.port">8082</prop>
        </props>
        
        <!-- Allow configuration via the configuration admin service.  Anything configured in the container
             will take precedent over the properties defined above -->
        <osgix:cm-properties persistent-id="com.fusesource.example.camel.scalable.process"/>
      </list>
    </property>
  </bean>
</beans>